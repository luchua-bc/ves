rankprofile[0].name "default"
rankprofile[0].fef.property[0].name "vespa.type.attribute.doc_vec"
rankprofile[0].fef.property[0].value "tensor(d0[2])"
rankprofile[1].name "unranked"
rankprofile[1].fef.property[0].name "vespa.rank.firstphase"
rankprofile[1].fef.property[0].value "value(0)"
rankprofile[1].fef.property[1].name "vespa.hitcollector.heapsize"
rankprofile[1].fef.property[1].value "0"
rankprofile[1].fef.property[2].name "vespa.hitcollector.arraysize"
rankprofile[1].fef.property[2].value "0"
rankprofile[1].fef.property[3].name "vespa.dump.ignoredefaultfeatures"
rankprofile[1].fef.property[3].value "true"
rankprofile[1].fef.property[4].name "vespa.type.attribute.doc_vec"
rankprofile[1].fef.property[4].value "tensor(d0[2])"
rankprofile[2].name "basebase"
rankprofile[2].fef.property[0].name "vespa.type.attribute.doc_vec"
rankprofile[2].fef.property[0].value "tensor(d0[2])"
rankprofile[3].name "base"
rankprofile[3].fef.property[0].name "rankingExpression(input_one).rankingScript"
rankprofile[3].fef.property[0].value "constant(matrix)"
rankprofile[3].fef.property[1].name "rankingExpression(input_one).type"
rankprofile[3].fef.property[1].value "tensor(d0[2],d1[2])"
rankprofile[3].fef.property[2].name "rankingExpression(input_two).rankingScript"
rankprofile[3].fef.property[2].value "attribute(doc_vec)"
rankprofile[3].fef.property[3].name "rankingExpression(input_two).type"
rankprofile[3].fef.property[3].value "tensor(d0[2])"
rankprofile[3].fef.property[4].name "rankingExpression(input_three).rankingScript"
rankprofile[3].fef.property[4].value "query(query_vec)"
rankprofile[3].fef.property[5].name "rankingExpression(input_three).type"
rankprofile[3].fef.property[5].value "tensor(d0[2])"
rankprofile[3].fef.property[6].name "rankingExpression(fn_query_vec).rankingScript"
rankprofile[3].fef.property[6].value "query(query_vec)"
rankprofile[3].fef.property[7].name "rankingExpression(fn_query_vec).type"
rankprofile[3].fef.property[7].value "tensor(d0[2])"
rankprofile[3].fef.property[8].name "rankingExpression(fn_doc_vec).rankingScript"
rankprofile[3].fef.property[8].value "attribute(doc_vec)"
rankprofile[3].fef.property[9].name "rankingExpression(fn_doc_vec).type"
rankprofile[3].fef.property[9].value "tensor(d0[2])"
rankprofile[3].fef.property[10].name "vespa.rank.firstphase"
rankprofile[3].fef.property[10].value "rankingExpression(firstphase)"
rankprofile[3].fef.property[11].name "rankingExpression(firstphase).rankingScript"
rankprofile[3].fef.property[11].value "-attribute(score)"
rankprofile[3].fef.property[12].name "vespa.summary.feature"
rankprofile[3].fef.property[12].value "query(query_vec)"
rankprofile[3].fef.property[13].name "vespa.summary.feature"
rankprofile[3].fef.property[13].value "onnx(multiply_add).multiply_add_output"
rankprofile[3].fef.property[14].name "vespa.type.attribute.doc_vec"
rankprofile[3].fef.property[14].value "tensor(d0[2])"
rankprofile[3].fef.property[15].name "vespa.type.query.query_vec"
rankprofile[3].fef.property[15].value "tensor(d0[2])"
rankprofile[4].name "global_phase"
rankprofile[4].fef.property[0].name "rankingExpression(fn_query_vec).rankingScript"
rankprofile[4].fef.property[0].value "query(query_vec)"
rankprofile[4].fef.property[1].name "rankingExpression(fn_query_vec).type"
rankprofile[4].fef.property[1].value "tensor(d0[2])"
rankprofile[4].fef.property[2].name "rankingExpression(input_one).rankingScript"
rankprofile[4].fef.property[2].value "constant(matrix)"
rankprofile[4].fef.property[3].name "rankingExpression(input_one).type"
rankprofile[4].fef.property[3].value "tensor(d0[2],d1[2])"
rankprofile[4].fef.property[4].name "rankingExpression(input_two).rankingScript"
rankprofile[4].fef.property[4].value "attribute(doc_vec)"
rankprofile[4].fef.property[5].name "rankingExpression(input_two).type"
rankprofile[4].fef.property[5].value "tensor(d0[2])"
rankprofile[4].fef.property[6].name "rankingExpression(input_three).rankingScript"
rankprofile[4].fef.property[6].value "query(query_vec)"
rankprofile[4].fef.property[7].name "rankingExpression(input_three).type"
rankprofile[4].fef.property[7].value "tensor(d0[2])"
rankprofile[4].fef.property[8].name "rankingExpression(fn_doc_vec).rankingScript"
rankprofile[4].fef.property[8].value "attribute(doc_vec)"
rankprofile[4].fef.property[9].name "rankingExpression(fn_doc_vec).type"
rankprofile[4].fef.property[9].value "tensor(d0[2])"
rankprofile[4].fef.property[10].name "vespa.rank.firstphase"
rankprofile[4].fef.property[10].value "rankingExpression(firstphase)"
rankprofile[4].fef.property[11].name "rankingExpression(firstphase).rankingScript"
rankprofile[4].fef.property[11].value "-attribute(score)"
rankprofile[4].fef.property[12].name "vespa.rank.globalphase"
rankprofile[4].fef.property[12].value "rankingExpression(globalphase)"
rankprofile[4].fef.property[13].name "rankingExpression(globalphase).rankingScript"
rankprofile[4].fef.property[13].value "reduce(onnx(multiply_add).multiply_add_output - rankingExpression(fn_query_vec), sum)"
rankprofile[4].fef.property[14].name "vespa.summary.feature"
rankprofile[4].fef.property[14].value "query(query_vec)"
rankprofile[4].fef.property[15].name "vespa.summary.feature"
rankprofile[4].fef.property[15].value "onnx(multiply_add).multiply_add_output"
rankprofile[4].fef.property[16].name "vespa.match.feature"
rankprofile[4].fef.property[16].value "attribute(doc_vec)"
rankprofile[4].fef.property[17].name "vespa.globalphase.rerankcount"
rankprofile[4].fef.property[17].value "3"
rankprofile[4].fef.property[18].name "vespa.type.attribute.doc_vec"
rankprofile[4].fef.property[18].value "tensor(d0[2])"
rankprofile[4].fef.property[19].name "vespa.type.query.query_vec"
rankprofile[4].fef.property[19].value "tensor(d0[2])"
rankprofile[5].name "second_phase"
rankprofile[5].fef.property[0].name "rankingExpression(fn_query_vec).rankingScript"
rankprofile[5].fef.property[0].value "query(query_vec)"
rankprofile[5].fef.property[1].name "rankingExpression(fn_query_vec).type"
rankprofile[5].fef.property[1].value "tensor(d0[2])"
rankprofile[5].fef.property[2].name "rankingExpression(input_one).rankingScript"
rankprofile[5].fef.property[2].value "constant(matrix)"
rankprofile[5].fef.property[3].name "rankingExpression(input_one).type"
rankprofile[5].fef.property[3].value "tensor(d0[2],d1[2])"
rankprofile[5].fef.property[4].name "rankingExpression(input_two).rankingScript"
rankprofile[5].fef.property[4].value "attribute(doc_vec)"
rankprofile[5].fef.property[5].name "rankingExpression(input_two).type"
rankprofile[5].fef.property[5].value "tensor(d0[2])"
rankprofile[5].fef.property[6].name "rankingExpression(input_three).rankingScript"
rankprofile[5].fef.property[6].value "query(query_vec)"
rankprofile[5].fef.property[7].name "rankingExpression(input_three).type"
rankprofile[5].fef.property[7].value "tensor(d0[2])"
rankprofile[5].fef.property[8].name "rankingExpression(fn_doc_vec).rankingScript"
rankprofile[5].fef.property[8].value "attribute(doc_vec)"
rankprofile[5].fef.property[9].name "rankingExpression(fn_doc_vec).type"
rankprofile[5].fef.property[9].value "tensor(d0[2])"
rankprofile[5].fef.property[10].name "vespa.rank.firstphase"
rankprofile[5].fef.property[10].value "rankingExpression(firstphase)"
rankprofile[5].fef.property[11].name "rankingExpression(firstphase).rankingScript"
rankprofile[5].fef.property[11].value "-attribute(score)"
rankprofile[5].fef.property[12].name "vespa.rank.secondphase"
rankprofile[5].fef.property[12].value "rankingExpression(secondphase)"
rankprofile[5].fef.property[13].name "rankingExpression(secondphase).rankingScript"
rankprofile[5].fef.property[13].value "reduce(onnx(multiply_add).multiply_add_output - rankingExpression(fn_query_vec), sum)"
rankprofile[5].fef.property[14].name "vespa.summary.feature"
rankprofile[5].fef.property[14].value "query(query_vec)"
rankprofile[5].fef.property[15].name "vespa.summary.feature"
rankprofile[5].fef.property[15].value "onnx(multiply_add).multiply_add_output"
rankprofile[5].fef.property[16].name "vespa.hitcollector.heapsize"
rankprofile[5].fef.property[16].value "3"
rankprofile[5].fef.property[17].name "vespa.type.attribute.doc_vec"
rankprofile[5].fef.property[17].value "tensor(d0[2])"
rankprofile[5].fef.property[18].name "vespa.type.query.query_vec"
rankprofile[5].fef.property[18].value "tensor(d0[2])"
