rankprofile[].name "default"
rankprofile[].fef.property[].name "vespa.type.attribute.tokens"
rankprofile[].fef.property[].value "tensor(d0[128])"
rankprofile[].name "unranked"
rankprofile[].fef.property[].name "vespa.rank.firstphase"
rankprofile[].fef.property[].value "value(0)"
rankprofile[].fef.property[].name "vespa.hitcollector.heapsize"
rankprofile[].fef.property[].value "0"
rankprofile[].fef.property[].name "vespa.hitcollector.arraysize"
rankprofile[].fef.property[].value "0"
rankprofile[].fef.property[].name "vespa.dump.ignoredefaultfeatures"
rankprofile[].fef.property[].value "true"
rankprofile[].fef.property[].name "vespa.type.attribute.tokens"
rankprofile[].fef.property[].value "tensor(d0[128])"
rankprofile[].name "using_model"
rankprofile[].fef.property[].name "rankingExpression(__token_length@4d7c1b66085df918).rankingScript"
rankprofile[].fef.property[].value "reduce(map(query(input), f(x)(x > 0)), sum)"
rankprofile[].fef.property[].name "rankingExpression(__token_length@a16087c578950aea).rankingScript"
rankprofile[].fef.property[].value "reduce(map(attribute(tokens), f(x)(x > 0)), sum)"
rankprofile[].fef.property[].name "rankingExpression(input_ids).rankingScript"
rankprofile[].fef.property[].value "tensor<float>(d0[1],d1[128])((if (d1 < 1.0, 101.0, if (d1 < 1.0 + rankingExpression(__token_length@4d7c1b66085df918), query(input){d0:(d1 - (1.0))}, if (d1 < (1.0 + rankingExpression(__token_length@4d7c1b66085df918) + 1.0), 102.0, if (d1 < (1.0 + rankingExpression(__token_length@4d7c1b66085df918) + 1.0 + rankingExpression(__token_length@a16087c578950aea)), attribute(tokens){d0:(d1 - (1.0 + rankingExpression(__token_length@4d7c1b66085df918) + 1.0))}, if (d1 < (1.0 + rankingExpression(__token_length@4d7c1b66085df918) + 1.0 + rankingExpression(__token_length@a16087c578950aea) + 1.0), 102.0, 0.0)))))))"
rankprofile[].fef.property[].name "rankingExpression(input_ids).type"
rankprofile[].fef.property[].value "tensor<float>(d0[1],d1[128])"
rankprofile[].fef.property[].name "rankingExpression(token_type_ids).rankingScript"
rankprofile[].fef.property[].value "tensor<float>(d0[1],d1[128])((if (d1 < (1.0 + rankingExpression(__token_length@4d7c1b66085df918) + 1.0), 0.0, if (d1 < (1.0 + rankingExpression(__token_length@4d7c1b66085df918) + 1.0 + rankingExpression(__token_length@a16087c578950aea) + 1.0), 1.0, 0.0))))"
rankprofile[].fef.property[].name "rankingExpression(token_type_ids).type"
rankprofile[].fef.property[].value "tensor<float>(d0[1],d1[128])"
rankprofile[].fef.property[].name "rankingExpression(attention_mask).rankingScript"
rankprofile[].fef.property[].value "tensor<float>(d0[1],d1[128])((if (d1 < (1.0 + rankingExpression(__token_length@4d7c1b66085df918) + 1.0 + rankingExpression(__token_length@a16087c578950aea) + 1.0), 1.0, 0.0)))"
rankprofile[].fef.property[].name "rankingExpression(attention_mask).type"
rankprofile[].fef.property[].value "tensor<float>(d0[1],d1[128])"
rankprofile[].fef.property[].name "vespa.rank.globalphase"
rankprofile[].fef.property[].value "rankingExpression(globalphase)"
rankprofile[].fef.property[].name "rankingExpression(globalphase).rankingScript"
rankprofile[].fef.property[].value "onnx(my_ranking_model).score{d0:(attribute(outputidx))}"
rankprofile[].fef.property[].name "vespa.match.feature"
rankprofile[].fef.property[].value "attribute(tokens)"
rankprofile[].fef.property[].name "vespa.match.feature"
rankprofile[].fef.property[].value "attribute(outputidx)"
rankprofile[].fef.property[].name "vespa.globalphase.rerankcount"
rankprofile[].fef.property[].value "1000"
rankprofile[].fef.property[].name "vespa.type.attribute.tokens"
rankprofile[].fef.property[].value "tensor(d0[128])"
rankprofile[].fef.property[].name "vespa.type.query.input"
rankprofile[].fef.property[].value "tensor(d0[32])"
